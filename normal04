'''
# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь
заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее
подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net),
te_4_st@test.com - верно указан.
'''

import re


name = input('Enter your name: ')
last_name = input('Enter your last name: ')
email = input('Enter your e-mail address: ')
pattern_name = '([A-Z][a-z])'
pattern_mail = '([a-z_0-9]+@[a-z]+\.[a-z]{2,3})'
if re.match(pattern_name, name) is None:
    print('You have entered wrong name')
    name = input('Enter the correct name: ')
if re.match(pattern_name, last_name) is None:
    print('You have entered wrong last name')
    lasts_name = input('Enter the correct last name: ')
if re.match(pattern_mail, email) is None:
    print('You have entered wrong e-mail address')
    email = input('Enter the correct e-mail address: ')


'''
# Задача - 2:
# Вам дан текст:
# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!
'''

some_str = 'Мороз и солнце; день чудесный!' \
           'Еще ты дремлешь, друг прелестный —' \
           'Пора, красавица, проснись:' \
           'Открой сомкнуты негой взоры' \
           'Навстречу северной Авроры,' \
           'Звездою севера явись!' \
           'Вечор, ты помнишь, вьюга злилась,' \
           'На мутном небе мгла носилась;' \
           'Луна, как бледное пятно,' \
           'Сквозь тучи мрачные желтела,' \
           'И ты печальная сидела —' \
           'А нынче... погляди в окно:' \
           'Под голубыми небесами' \
           'Великолепными коврами,' \
           'Блестя на солнце, снег лежит;' \
           'Прозрачный лес один чернеет,' \
           'И ель сквозь иней зеленеет,' \
           'И речка подо льдом блестит.' \
           'Вся комната янтарным блеском' \
           'Озарена. Веселым треском' \
           'Трещит затопленная печь.' \
           'Приятно думать у лежанки.' \
           'Но знаешь: не велеть ли в санки' \
           'Кобылку бурую запречь?' \
           'Скользя по утреннему снегу,' \
           'Друг милый, предадимся бегу' \
           'Нетерпеливого коня' \
           'И навестим поля пустые,' \
           'Леса, недавно столь густые,' \
           'И берег, милый для меня.'
result = [re.findall(r'\.\.\.', some_str)]
print('There are {} suspension point(s) in the analyzed text'.format(len(result)))

